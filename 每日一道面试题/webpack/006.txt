在Webpack中，hash、chunkhash 和 contenthash 都是用于生成文件名哈希的选项

hash: (表示所有文件哈希值相同)
    适用范围： 适用于所有文件，包括入口文件、依赖的模块文件等。
    特点： 所有的输出文件共享同一个 hash 值，即使只有一个文件发生改变，所有的文件名都会发生变化。
    在实际项目中不建议用，效率比较低

chunkhash: (是基于特定代码块（chunk）的哈希值, 当某个代码块发生变化时，chunkhash值会改变)
    适用范围： 适用于每个独立的入口文件（entry chunk）。
    特点： 每个入口文件都有独立的 hash 值，只有当对应的入口文件发生改变时，该入口文件输出的文件名才会发生变化。这样可以确保缓存不会因为一个入口文件的改变而导致其他入口文件的重新加载。

contenthash: (是基于文件内容的哈希值。当文件内容发生变化时，contenthash值会改变)
    适用范围： 适用于文件的内容级别，例如 css 等。
    特点： 与文件的内容相关联，只有文件内容发生变化时，输出文件名才会发生变化。这对于缓存和长期缓存非常有用，因为只有文件内容改变时，浏览器才需要重新下载该文件。