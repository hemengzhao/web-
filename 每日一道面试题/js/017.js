/**
 * MDN 上面解释
 * 闭包是一个函数以及其捆绑的周边环境状态（lexical environment，词法环境）的引用的组合。
 * 换而言之，闭包让开发者可以从内部函数访问外部函数的作用域。
 * 在 JavaScript 中，闭包会随着函数的创建而被同时创建。
 *
 * 优点
 * 1. 保护变量，避免变量全局污染
 * 2. 实现私有变量和方法
 * 3. 创建函数工厂
 * 5. 实现回调和定时器
 *
 * 缺点：
 * 1. 容易造成内存泄露
 * 2. 性能问题 闭包会增加内存和运行时上下文的消耗，可能影响代码的性能，特别是在循环中创建闭包时要格外注意
 * 3. 滥用闭包可能导致代码难以维护，理解和调试
 */

function makeFunc() {
  var name = "Mozilla";
  function displayName() {
    alert(name);
  }
  return displayName;
}
