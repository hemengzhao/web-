// 计算结果 ([][[]] + [])[+!![]] + ([] + {})[+!![] + +!![]]
// 计算结果 (![] + [])[+!![] + !![] + !![]] + ([] + {})[+!![] + +!![]]

const str1 = ([][[]] + [])[+!![]] + ([] + {})[+!![] + +!![]];
// 解析左侧 ([][[]] + [])[+!![]]

//       ([][[]] + [])
//      ([][[]] + []) => undefined + [] => undefined + [].toString() => undefined + '' => 'undefined'
//      [][[]]  => [][0] => undefined
//      [] 转成数字 0

//      +!![] => +true => 1
//      !![] => true

//  ([][[]] + [])[+!![]] => 'undefined'[1] => 'n

// 解析右侧  ([] + {})[+!![] + +!![]]

//          ([] + {})  => '' + '[object Object]' => '[object Object]'

//          +!![] + +!![] => 1 + 1 => 2
//         +!![] => 1

//         ([] + {})[+!![] + +!![]] => '[object Object]'[2] => 'b'

//   ([][[]] + [])[+!![]] + ([] + {})[+!![] + +!![]]  => 'nb'

// 引用数据转到基本数据    会依次调用 valueOf 和 toString 方法

const str2 = (![] + [])[+!![] + !![] + !![]] + ([] + {})[+!![] + +!![]];

// (![] + [])[+!![] + !![] + !![]]
// (![] + []) => (false + '') => 'false'
// +!![] + !![] + !![] => 1 + true + true => 1 + 1 + 1 => 3
// (![] + [])[+!![] + !![] + !![]] => 'false'[3] => 's'

// ([] + {})[+!![] + +!![]]
//  [] + {} => '' + '[object Object]' => '[object Object]'
// +!![] + +!![]  => 1 + 1 => 2
//  ([] + {})[+!![] + +!![]] => '[object Object]'[2] => 'b'

// (![] + [])[+!![] + !![] + !![]] + ([] + {})[+!![] + +!![]]; => 's' + 'b' => 'sb'
